# Generated by Django 2.0.2 on 2018-04-28 16:31

import core.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cinfo', '0002_test_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='VisualNovel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_published', models.BooleanField(default=True, verbose_name='публикация')),
                ('title', models.CharField(max_length=256, verbose_name='название')),
                ('alternative_title', models.CharField(default='', max_length=500, verbose_name='альтернативные названия')),
                ('description', models.TextField(default='', max_length=8000, verbose_name='описание')),
                ('photo', core.fields.ImageFieldWithEnhancedUploadTo(blank=True, null=True, verbose_name='фотография')),
                ('date_of_release', models.DateField(verbose_name='дата релиза')),
                ('vndb_id', models.IntegerField(verbose_name='id на VNDb')),
                ('steam_link', models.CharField(blank=True, max_length=400, null=True, verbose_name='ссылка в Steam')),
                ('alias', models.TextField(default='', max_length=30, verbose_name='алиас (до 30 символов)')),
                ('rate', models.IntegerField(default=0, verbose_name='оценка на VNDb')),
                ('popularity', models.IntegerField(default=0, verbose_name='популярность на VNDb')),
                ('vote_count', models.IntegerField(default=0, verbose_name='число голосов на VNDb')),
            ],
            options={
                'verbose_name': 'Визуальная новелла',
                'verbose_name_plural': 'Визуальные новеллы',
                'db_table': 'vncore',
            },
        ),
        migrations.CreateModel(
            name='VNGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=0, verbose_name='вес')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genres_set', to='cinfo.Genre')),
                ('visual_novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vn_core.VisualNovel')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'db_table': 'vns_to_genres',
            },
        ),
        migrations.CreateModel(
            name='VNStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=0, verbose_name='вес')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cinfo.StaffRole')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_set', to='cinfo.Staff')),
                ('visual_novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vn_core.VisualNovel')),
            ],
            options={
                'verbose_name': 'Создатель',
                'verbose_name_plural': 'Создатели',
                'db_table': 'vns_to_staff',
            },
        ),
        migrations.CreateModel(
            name='VNStudio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=0, verbose_name='вес')),
                ('studio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='studios_set', to='cinfo.Studio')),
                ('visual_novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vn_core.VisualNovel')),
            ],
            options={
                'verbose_name': 'Студия',
                'verbose_name_plural': 'Студии',
                'db_table': 'vns_to_studios',
            },
        ),
        migrations.CreateModel(
            name='VNTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=0, verbose_name='вес')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_set', to='cinfo.Tag')),
                ('visual_novel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vn_core.VisualNovel')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
                'db_table': 'vns_to_tags',
            },
        ),
        migrations.AddField(
            model_name='visualnovel',
            name='genres',
            field=models.ManyToManyField(blank=True, through='vn_core.VNGenre', to='cinfo.Genre', verbose_name='жанры'),
        ),
        migrations.AddField(
            model_name='visualnovel',
            name='longevity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='cinfo.Longevity', verbose_name='продолжительность'),
        ),
        migrations.AddField(
            model_name='visualnovel',
            name='staff',
            field=models.ManyToManyField(blank=True, through='vn_core.VNStaff', to='cinfo.Staff', verbose_name='создатели'),
        ),
        migrations.AddField(
            model_name='visualnovel',
            name='studios',
            field=models.ManyToManyField(blank=True, through='vn_core.VNStudio', to='cinfo.Studio', verbose_name='студии'),
        ),
        migrations.AddField(
            model_name='visualnovel',
            name='tags',
            field=models.ManyToManyField(blank=True, through='vn_core.VNTag', to='cinfo.Tag', verbose_name='тэги'),
        ),
    ]
